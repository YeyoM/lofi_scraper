name: Run Tests and Upload to Firebase

on:
  push:
    branches:
      - main

jobs:
  test_and_upload:
    name: Run Tests and Upload to Firebase
    runs-on: ubuntu-latest

    env:
      FIREBASE_URL: ${{ secrets.FIREBASE_URL }}
      FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
      FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
      FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.6"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        id: test
        run: |
          python -m unittest discover -s tests -p "test_*.py"

      - name: Check test status and run scraper/Firebase uploader
        if: ${{ steps.test.outcome == 'success' }}
        run: |
          ./run_all.sh
